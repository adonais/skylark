name: Skylark Ci
on: 
  push:
    branches: 
      - release
env:
  APP_NAME: skylark

jobs:
  fx_build:
    name: skylark build
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    
    - name: set variable
      id: set_var
      run: |
        cd /d %GITHUB_WORKSPACE%
        set /p m_ver=<src\version_display.txt
        echo MY_VER=%m_ver%>>%GITHUB_ENV%
        echo MY_BITS64=x64>>%GITHUB_ENV%
        echo MY_BITS32=x86>>%GITHUB_ENV%
      shell: cmd
      
    - name: download plugins64
      id: plugins64
      shell: cmake -P {0}
      run: |
        set(threeparty_url "https://sourceforge.net/projects/libportable/files/Skylark/plugins_64.7z/download")
        file(DOWNLOAD "${threeparty_url}" $ENV{GITHUB_WORKSPACE}/src/3rdparty/plugins_64.7z SHOW_PROGRESS)
        execute_process(COMMAND 7z x ./plugins_64.7z -aoa WORKING_DIRECTORY $ENV{GITHUB_WORKSPACE}/src/3rdparty)      

    - name: Building_x64
      id: vs64
      run: |
        cd /d "%GITHUB_WORKSPACE%"
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64"
        nmake clean
        nmake CC=clang-cl ACTIONS_BUILDING=1
        nmake package RELEASE_VERSION=-v%MY_VER%
        if exist "%GITHUB_WORKSPACE%\src\3rdparty\plugins" rd /s/q "%GITHUB_WORKSPACE%\src\3rdparty\plugins"
      shell: cmd
      
    - name: download plugins32
      id: plugins32
      shell: cmake -P {0}
      run: |
        set(threeparty_url "https://sourceforge.net/projects/libportable/files/Skylark/plugins_32.7z/download")
        file(DOWNLOAD "${threeparty_url}" $ENV{GITHUB_WORKSPACE}/src/3rdparty/plugins_32.7z SHOW_PROGRESS)
        execute_process(COMMAND 7z x ./plugins_32.7z -aoa WORKING_DIRECTORY $ENV{GITHUB_WORKSPACE}/src/3rdparty)

    - name: Building_x86
      id: vs32
      run: |
        cd /d "%GITHUB_WORKSPACE%"
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32"
        nmake clean
        nmake CC=clang-cl ACTIONS_BUILDING=1
        nmake package RELEASE_VERSION=-v%MY_VER%
      shell: cmd

    - name: Get current time
      uses: yxl0756/get-current-time@v2.0.2
      id: current-time
      with:
        format: YYYYMMDDHHmmss

    - uses: yxl0756/release-action@v1.12.0
      with:
        tag: ${{ steps.current-time.outputs.formattedTime }}
        name: Release ${{ steps.current-time.outputs.formattedTime }}
        artifacts: ${{ github.workspace }}/${{ env.APP_NAME }}_${{ env.MY_BITS64 }}-v${{ env.MY_VER }}.7z,${{ github.workspace }}/${{ env.APP_NAME }}_${{ env.MY_BITS32 }}-v${{ env.MY_VER }}.7z
        prerelease: false
        generateReleaseNotes: true
        token: ${{ secrets.GITHUB_TOKEN }}